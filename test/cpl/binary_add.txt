%% Copyright (c) 2019, Herman Bergwerf. All rights reserved.
%% Use of this source code is governed by a MIT-style license
%% that can be found in the LICENSE file.

% Helper macros
(macro add-bit   (a b c d)  (iff a b c d))
(macro carry-bit (a b c c') (iff c' (or (/\ a b) (/\ a c) (/\ b c))))
(macro add-fits  (c0 cn)    (/\ (~ c0) (~ cn)))

% Binary addition constraints
(macro add-phi (n) (/\* i 1 n (and
  (add-bit a_i b_i c_i d_i)
  (carry-bit a_i b_i c_i (_ c (calc i 1 -)))
  (add-fits c_0 c_n)
)))

% Add two given numbers (result is stored in d_i)
% Note that the bits are numbered from left to right starting with 1.
(macro add (n a b) (and
  (add-phi n)
  (/\* i 1 n (? a_i))
  (/\* i 1 n (? b_i))
))
